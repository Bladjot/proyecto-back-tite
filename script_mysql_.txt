-- Crear la base de datos
CREATE DATABASE IF NOT EXISTS pulgashop_pf
  CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
USE pulgashop_pf;

-- TABLA: USUARIOS
CREATE TABLE IF NOT EXISTS usuarios (
  id_usuario BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
  correo VARCHAR(255) NOT NULL,
  correo_normalizado VARCHAR(255) AS (LOWER(correo)) STORED UNIQUE,
  nombre_usuario VARCHAR(50) NOT NULL,
  nombre_usuario_normalizado VARCHAR(50) AS (LOWER(nombre_usuario)) STORED UNIQUE,
  clave_hash VARCHAR(255) NOT NULL,
  correo_verificado BOOLEAN NOT NULL DEFAULT 0,
  estado ENUM('activo', 'bloqueado', 'pendiente') NOT NULL DEFAULT 'activo',
  ultimo_ingreso DATETIME NULL,
  creado_en DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  actualizado_en DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  eliminado_en DATETIME NULL
) ENGINE=InnoDB;

-- TABLA: PERFILES
CREATE TABLE IF NOT EXISTS perfiles (
  id_usuario BIGINT UNSIGNED NOT NULL,
  nombre_completo VARCHAR(120) NOT NULL,
  rut VARCHAR(12) NOT NULL UNIQUE,
  foto VARCHAR(500) NULL,
  biografia VARCHAR(280) NULL,
  telefono VARCHAR(30) NULL,
  pais VARCHAR(80) NULL,
  ciudad VARCHAR(80) NULL,
  direccion VARCHAR(200) NULL,
  codigo_postal VARCHAR(20) NULL,
  preferencias JSON NULL,
  creado_en DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  actualizado_en DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (id_usuario),
  CONSTRAINT fk_perfiles_usuario FOREIGN KEY (id_usuario) REFERENCES usuarios(id_usuario)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

-- TABLA: ROLES
CREATE TABLE IF NOT EXISTS roles (
  id_rol BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
  codigo VARCHAR(64) NOT NULL UNIQUE,
  nombre VARCHAR(100) NOT NULL,
  descripcion VARCHAR(255) NULL,
  actualizado_en DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB;

-- TABLA: PERMISOS
CREATE TABLE IF NOT EXISTS permisos (
  id_permiso BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
  codigo VARCHAR(100) NOT NULL UNIQUE,
  descripcion VARCHAR(255) NULL,
  creado_en DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  actualizado_en DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB;

-- TABLA: USUARIOS_ROLES
CREATE TABLE IF NOT EXISTS usuarios_roles (
  id_usuario BIGINT UNSIGNED NOT NULL,
  id_rol BIGINT UNSIGNED NOT NULL,
  asignado_en DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id_usuario, id_rol),
  CONSTRAINT fk_usuarios_roles_usuario FOREIGN KEY (id_usuario) REFERENCES usuarios(id_usuario) ON DELETE CASCADE,
  CONSTRAINT fk_usuarios_roles_rol FOREIGN KEY (id_rol) REFERENCES roles(id_rol) ON DELETE CASCADE
) ENGINE=InnoDB;

-- TABLA: ROLES_PERMISOS
CREATE TABLE IF NOT EXISTS roles_permisos (
  id_rol BIGINT UNSIGNED NOT NULL,
  id_permiso BIGINT UNSIGNED NOT NULL,
  PRIMARY KEY (id_rol, id_permiso),
  CONSTRAINT fk_roles_permisos_rol FOREIGN KEY (id_rol) REFERENCES roles(id_rol) ON DELETE CASCADE,
  CONSTRAINT fk_roles_permisos_permiso FOREIGN KEY (id_permiso) REFERENCES permisos(id_permiso) ON DELETE CASCADE
) ENGINE=InnoDB;

-- TABLA: SESIONES
CREATE TABLE IF NOT EXISTS sesiones (
  id_sesion BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
  id_usuario BIGINT UNSIGNED NOT NULL,
  token_refresco CHAR(64) NOT NULL UNIQUE,
  agente_usuario VARCHAR(255) NULL,
  direccion_ip VARBINARY(16) NULL,
  expira_en DATETIME NOT NULL,
  creado_en DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  revocado_en DATETIME NULL,
  CONSTRAINT fk_sesiones_usuario FOREIGN KEY (id_usuario) REFERENCES usuarios(id_usuario) ON DELETE CASCADE
) ENGINE=InnoDB;

-- TABLA: VERIFICACIONES_CORREO
CREATE TABLE IF NOT EXISTS verificaciones_correo (
  id_verificacion BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
  id_usuario BIGINT UNSIGNED NOT NULL,
  token CHAR(64) NOT NULL UNIQUE,
  expira_en DATETIME NOT NULL,
  consumido_en DATETIME NULL,
  creado_en DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT fk_verificaciones_usuario FOREIGN KEY (id_usuario) REFERENCES usuarios(id_usuario) ON DELETE CASCADE
) ENGINE=InnoDB;

-- TABLA: CUENTAS_OAUTH
CREATE TABLE IF NOT EXISTS cuentas_oauth (
  id_cuenta BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
  id_usuario BIGINT UNSIGNED NULL,
  proveedor ENUM('google') NOT NULL,
  id_proveedor VARCHAR(255) NOT NULL UNIQUE,
  correo VARCHAR(255) NULL,
  correo_verificado BOOLEAN NOT NULL DEFAULT 0,
  nombre_completo VARCHAR(120) NULL,
  avatar_url VARCHAR(500) NULL,
  token_acceso VARBINARY(1024) NULL,
  token_refresco VARBINARY(1024) NULL,
  expira_en DATETIME NULL,
  ultimo_ingreso DATETIME NULL,
  creado_en DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  actualizado_en DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT fk_cuentas_oauth_usuario FOREIGN KEY (id_usuario) REFERENCES usuarios(id_usuario) ON DELETE CASCADE
) ENGINE=InnoDB;
